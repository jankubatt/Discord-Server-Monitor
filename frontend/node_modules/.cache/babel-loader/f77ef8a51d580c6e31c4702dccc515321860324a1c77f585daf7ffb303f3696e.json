{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChart = ({\n  presencesData\n}) => {\n  const yDomain = presencesData.map(entry => entry.username);\n  return /*#__PURE__*/_jsxDEV(ScatterChart, {\n    children: [/*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"timestamp\",\n      domain: ['auto', 'auto'],\n      name: \"Time\",\n      tickFormatter: unixTime => moment(unixTime).format('MM. DD. HH:mm'),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"username\",\n      type: \"category\",\n      domain: yDomain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n      type: \"category\",\n      dataKey: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      cursor: {\n        strokeDasharray: '3 3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n      data: presencesData.filter(entry => entry.status === status).slice(0, 5000),\n      fill: statusColors[status],\n      shape: \"circle\"\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChart","presencesData","yDomain","map","entry","username","children","dataKey","domain","name","tickFormatter","unixTime","format","type","fileName","_jsxFileName","lineNumber","columnNumber","cursor","strokeDasharray","Object","keys","status","data","filter","slice","fill","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChart = ({presencesData}) => {\r\n\r\n  const yDomain = presencesData.map((entry) => entry.username);\r\n\r\n  return (\r\n    <ScatterChart>\r\n      <XAxis\r\n        dataKey=\"timestamp\"\r\n        domain={['auto', 'auto']}\r\n        name=\"Time\"\r\n        tickFormatter={(unixTime) => moment(unixTime).format('MM. DD. HH:mm')}\r\n        type=\"number\"\r\n      />\r\n      <YAxis dataKey=\"username\" type=\"category\" domain={yDomain} />\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={presencesData.filter((entry) => entry.status === status).slice(0, 5000)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n    </ScatterChart>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtF,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAE,MAAM;EACfC,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAa,CAAC,KAAK;EAEvC,MAAMC,OAAO,GAAGD,aAAa,CAACE,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAE5D,oBACEX,OAAA,CAACT,YAAY;IAAAqB,QAAA,gBACXZ,OAAA,CAACP,KAAK;MACJoB,OAAO,EAAC,WAAW;MACnBC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAE;MACzBC,IAAI,EAAC,MAAM;MACXC,aAAa,EAAGC,QAAQ,IAAKnB,MAAM,CAACmB,QAAQ,CAAC,CAACC,MAAM,CAAC,eAAe,CAAE;MACtEC,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACFvB,OAAA,CAACN,KAAK;MAACmB,OAAO,EAAC,UAAU;MAACM,IAAI,EAAC,UAAU;MAACL,MAAM,EAAEN;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DvB,OAAA,CAACL,KAAK;MAACwB,IAAI,EAAC,UAAU;MAACN,OAAO,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CvB,OAAA,CAACJ,OAAO;MAAC4B,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAM;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE9CG,MAAM,CAACC,IAAI,CAAC1B,YAAY,CAAC,CAACQ,GAAG,CAAEmB,MAAM,iBACpC5B,OAAA,CAACR,OAAO;MAENqC,IAAI,EAAEtB,aAAa,CAACuB,MAAM,CAAEpB,KAAK,IAAKA,KAAK,CAACkB,MAAM,KAAKA,MAAM,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAE;MAC9EC,IAAI,EAAE/B,YAAY,CAAC2B,MAAM,CAAE;MAC3BK,KAAK,EAAC;IAAQ,GAHTL,MAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACW,EAAA,GA3BI5B,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}