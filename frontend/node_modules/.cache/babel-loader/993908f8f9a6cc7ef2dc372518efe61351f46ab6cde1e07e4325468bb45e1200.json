{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    console.log(payload, label);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Time: ${new Date(payload[0].value).toLocaleString(\"cs\")}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Status: ${payload[2].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst StatusChart = ({\n  chartData,\n  numOfUsers\n}) => {\n  // Create a mapping of usernames to numerical indices\n  const usernameToIndex = chartData.reduce((acc, cur, index) => {\n    acc[cur.username] = index % (chartData.length - numOfUsers);\n    return acc;\n  }, {});\n\n  // Replace usernames in chartData with their corresponding indices\n  const processedChartData = chartData.map(entry => ({\n    ...entry,\n    username: usernameToIndex[entry.username]\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"95%\",\n    height: 500,\n    children: [/*#__PURE__*/_jsxDEV(ScatterChart, {\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\",\n        domain: ['auto', 'auto'],\n        name: \"Time\",\n        type: \"number\",\n        tickFormatter: unixTime => moment(unixTime).format('HH:mm Do')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"username\",\n        type: \"number\",\n        ticks: Object.values(usernameToIndex),\n        tickFormatter: index => Object.keys(usernameToIndex).find(key => usernameToIndex[key] === index) // Display actual usernames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n        type: \"category\",\n        dataKey: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this),\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n        data: processedChartData.filter(entry => entry.status === status),\n        fill: statusColors[status],\n        shape: \"circle\"\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), console.log(Object.values(usernameToIndex), chartData.length)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatusChart;\nexport default StatusChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"StatusChart\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","ResponsiveContainer","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","CustomTooltip","active","payload","label","length","console","log","className","children","Date","value","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatusChart","chartData","numOfUsers","usernameToIndex","reduce","acc","cur","index","username","processedChartData","map","entry","width","height","dataKey","domain","name","type","tickFormatter","unixTime","format","ticks","Object","values","keys","find","key","content","cursor","strokeDasharray","status","data","filter","fill","shape","_c2","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    console.log(payload, label)\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p>{`Time: ${new Date(payload[0].value).toLocaleString(\"cs\")}`}</p>\r\n        <p>{`Status: ${payload[2].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst StatusChart = ({chartData, numOfUsers}) => {\r\n  // Create a mapping of usernames to numerical indices\r\n  const usernameToIndex = chartData.reduce((acc, cur, index) => {\r\n    acc[cur.username] = index%(chartData.length-numOfUsers);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Replace usernames in chartData with their corresponding indices\r\n  const processedChartData = chartData.map(entry => ({\r\n    ...entry,\r\n    username: usernameToIndex[entry.username]\r\n  }));\r\n\r\n\r\n  return (\r\n    <ResponsiveContainer width = '95%' height = {500} >\r\n    <ScatterChart>\r\n      <XAxis\r\n        dataKey = 'timestamp'\r\n        domain = {['auto', 'auto']}\r\n        name = 'Time'\r\n        type = 'number'\r\n        tickFormatter = {(unixTime) => moment(unixTime).format('HH:mm Do')}\r\n      />\r\n      <YAxis \r\n        dataKey = 'username' \r\n        type='number' \r\n        ticks={Object.values(usernameToIndex)}\r\n        tickFormatter={(index) => Object.keys(usernameToIndex).find(key => usernameToIndex[key] === index)} // Display actual usernames\r\n        \r\n      />\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip content={<CustomTooltip />}  cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={processedChartData.filter((entry) => entry.status === status)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n    </ScatterChart>\r\n{console.log(Object.values(usernameToIndex), chartData.length)}\r\n\r\n  </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatusChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}