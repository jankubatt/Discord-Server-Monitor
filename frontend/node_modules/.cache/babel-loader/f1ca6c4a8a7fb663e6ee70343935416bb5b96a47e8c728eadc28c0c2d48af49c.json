{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data,\n  users\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const screenWidth = window.innerWidth; // Get the screen width\n\n  const getLegend = () => {};\n  useEffect(() => {\n    let tmp = [];\n    for (let i = new Date().getTime() - 86400000; i < new Date().getTime(); i += 60000) {\n      tmp.push(i);\n    }\n    setTimes(tmp);\n    getLegend();\n  }, []);\n  const calculateWidth = (startTime, endTime) => {\n    const timeDiff = endTime - startTime;\n    const maxWidth = screenWidth; // Maximum width based on screen width\n    const percentage = timeDiff / 86400000 * 100; // Convert time difference to percentage\n    return maxWidth * percentage / 100; // Calculate width based on percentage\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users === null || users === void 0 ? void 0 : users.map(user => {\n      const userStatuses = data.filter(dataItem => user.username === dataItem.username);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\"\n        },\n        children: userStatuses.map((item, index) => {\n          const startTime = index === 0 ? item.timestamp : userStatuses[index - 1].timestamp;\n          const endTime = item.timestamp;\n          const width = calculateWidth(endTime, startTime);\n          console.log(user.username, startTime, endTime, width);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: item.status === \"offline\" ? \"red\" : \"green\",\n              minWidth: `${width}px`,\n              minHeight: \"20px\" // Set the height as per your requirement\n            }\n          }, item.timestamp, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this);\n        })\n      }, user.username, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Chart, \"81bowZj0s+OEa3RiisSpRGrXe+U=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chart","data","users","_s","times","setTimes","screenWidth","window","innerWidth","getLegend","tmp","i","Date","getTime","push","calculateWidth","startTime","endTime","timeDiff","maxWidth","percentage","children","map","user","userStatuses","filter","dataItem","username","style","display","flexDirection","justifyContent","item","index","timestamp","width","console","log","backgroundColor","status","minWidth","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/Chart/Chart.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Chart = ({ data, users }) => {\r\n  const [times, setTimes] = useState([]);\r\n  const screenWidth = window.innerWidth; // Get the screen width\r\n\r\n  const getLegend = () => {\r\n  };\r\n\r\n  useEffect(() => {\r\n    let tmp = [];\r\n\r\n    for (let i = new Date().getTime() - 86400000; i < new Date().getTime(); i += 60000) {\r\n      tmp.push(i);\r\n    }\r\n    setTimes(tmp);\r\n    getLegend();\r\n  }, []);\r\n\r\n  const calculateWidth = (startTime, endTime) => {\r\n    const timeDiff = endTime - startTime;\r\n    const maxWidth = screenWidth; // Maximum width based on screen width\r\n    const percentage = (timeDiff / 86400000) * 100; // Convert time difference to percentage\r\n    return (maxWidth * percentage) / 100; // Calculate width based on percentage\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {users?.map((user) => {\r\n        const userStatuses = data.filter((dataItem) => user.username === dataItem.username);\r\n        return (\r\n          <div\r\n            key={user.username}\r\n            style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\" }}\r\n          >\r\n            {userStatuses.map((item, index) => {\r\n              const startTime = index === 0 ? item.timestamp : userStatuses[index - 1].timestamp;\r\n              const endTime = item.timestamp;\r\n\r\n              const width = calculateWidth(endTime, startTime);\r\n                console.log(user.username, startTime, endTime, width)\r\n\r\n              return (\r\n                <div\r\n                  key={item.timestamp}\r\n                  style={{\r\n                    backgroundColor: item.status === \"offline\" ? \"red\" : \"green\",\r\n                    minWidth: `${width}px`,\r\n                    minHeight: \"20px\", // Set the height as per your requirement\r\n                  }}\r\n                ></div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}