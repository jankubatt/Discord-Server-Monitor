{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChartUser.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    console.log(payload, label);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Time: ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Status: ${payload[2].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst StatusChartUser = ({\n  chartData\n}) => {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"95%\",\n    height: 100,\n    children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\",\n        domain: ['auto', 'auto'],\n        name: \"Time\",\n        tickFormatter: unixTime => moment(unixTime).format('HH:mm Do'),\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"username\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n        type: \"category\",\n        dataKey: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this),\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n        data: chartData.filter(entry => entry.status === status),\n        fill: statusColors[status],\n        shape: \"circle\"\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatusChartUser;\nexport default StatusChartUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"StatusChartUser\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","ResponsiveContainer","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","CustomTooltip","active","payload","label","length","console","log","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatusChartUser","chartData","width","height","dataKey","domain","name","tickFormatter","unixTime","format","type","content","cursor","strokeDasharray","Object","keys","map","status","data","filter","entry","fill","shape","_c2","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChartUser.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    console.log(payload, label)\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p>{`Time: ${payload[0].value}`}</p>\r\n        <p>{`Status: ${payload[2].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst StatusChartUser = ({chartData}) => {\r\n  return (\r\n    <ResponsiveContainer width = '95%' height = {100} >\r\n    <ScatterChart>\r\n      <XAxis\r\n        dataKey = 'timestamp'\r\n        domain = {['auto', 'auto']}\r\n        name = 'Time'\r\n        tickFormatter = {(unixTime) => moment(unixTime).format('HH:mm Do')}\r\n        type = 'number'\r\n      />\r\n      <YAxis dataKey = 'username' type='number'  />\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={chartData.filter((entry) => entry.status === status)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n\r\n    </ScatterChart>\r\n  </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatusChartUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}