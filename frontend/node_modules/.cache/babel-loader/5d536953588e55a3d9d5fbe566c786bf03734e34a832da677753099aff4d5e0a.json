{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data,\n  users\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState(false);\n  const [tooltipText, setTooltipText] = useState(\"\");\n  const screenWidth = window.innerWidth; // Get the screen width\n\n  const calculateWidth = (startTime, endTime) => {\n    const timeDiff = endTime - startTime;\n    const maxWidth = screenWidth; // Maximum width based on screen width\n    const percentage = timeDiff / 86400000 * 100; // Convert time difference to percentage\n    return maxWidth * percentage / 100; // Calculate width based on percentage\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [users === null || users === void 0 ? void 0 : users.map(user => {\n      const userStatuses = data.filter(dataItem => user.username === dataItem.username);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\"\n        },\n        children: userStatuses.map((item, index) => {\n          const startTime = index === 0 ? item.timestamp : userStatuses[index - 1].timestamp;\n          const endTime = item.timestamp;\n          const width = calculateWidth(endTime, startTime);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: item.status === \"offline\" ? \"grey\" : item.status === \"dnd\" ? \"red\" : item.status === \"idle\" ? \"orange\" : \"green\",\n              minWidth: `${width}px`,\n              minHeight: \"20px\" // Set the height as per your requirement\n            },\n\n            onMouseEnter: e => {\n              setTooltip(true);\n              setTooltipText(e);\n            },\n            onMouseLeave: () => setTooltip(false),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: \"none\"\n              },\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 18\n            }, this)\n          }, item.timestamp, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this);\n        })\n      }, user.username, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: tooltip ? \"block\" : \"none\"\n      },\n      children: tooltipText.target.firstChild.innerHTML\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chart, \"4LnEttZpiehGUIpgeWly8bZdxpk=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chart","data","users","_s","tooltip","setTooltip","tooltipText","setTooltipText","screenWidth","window","innerWidth","calculateWidth","startTime","endTime","timeDiff","maxWidth","percentage","children","map","user","userStatuses","filter","dataItem","username","style","display","flexDirection","justifyContent","item","index","timestamp","width","backgroundColor","status","minWidth","minHeight","onMouseEnter","e","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","target","firstChild","innerHTML","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/Chart/Chart.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Chart = ({ data, users }) => {\r\n    const [tooltip, setTooltip] = useState(false);\r\n    const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  const screenWidth = window.innerWidth; // Get the screen width\r\n\r\n  const calculateWidth = (startTime, endTime) => {\r\n    const timeDiff = endTime - startTime;\r\n    const maxWidth = screenWidth; // Maximum width based on screen width\r\n    const percentage = (timeDiff / 86400000) * 100; // Convert time difference to percentage\r\n    return (maxWidth * percentage) / 100; // Calculate width based on percentage\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {users?.map((user) => {\r\n        const userStatuses = data.filter((dataItem) => user.username === dataItem.username);\r\n        return (\r\n          <div\r\n            key={user.username}\r\n            style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {userStatuses.map((item, index) => {\r\n              const startTime = index === 0 ? item.timestamp : userStatuses[index - 1].timestamp;\r\n              const endTime = item.timestamp;\r\n\r\n              const width = calculateWidth(endTime, startTime);\r\n\r\n              return (\r\n                <div\r\n                  key={item.timestamp}\r\n                  style={{\r\n                    backgroundColor: item.status === \"offline\" ? \"grey\" : item.status === \"dnd\" ? \"red\" : item.status === \"idle\" ? \"orange\" : \"green\",\r\n                    minWidth: `${width}px`,\r\n                    minHeight: \"20px\", // Set the height as per your requirement\r\n                  }}\r\n                  \r\n                  onMouseEnter={(e) => {setTooltip(true); setTooltipText(e)}}\r\n                  onMouseLeave={() => setTooltip(false)}\r\n                ><span style={{display: \"none\"}}>{item.username}</span></div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <div style={{display: (tooltip ? \"block\" : \"none\")}}>\r\n        {tooltipText.target.firstChild.innerHTML}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}