{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChartUser.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChartUser = ({\n  presencesData\n}) => {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"95%\",\n    height: 500,\n    children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\",\n        domain: ['auto', 'auto'],\n        name: \"Time\",\n        tickFormatter: unixTime => moment(unixTime).format('HH:mm Do'),\n        type: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"username\",\n        name: \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n        type: \"category\",\n        dataKey: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n        data: presencesData.filter(entry => entry.status === status).slice(0, 100),\n        fill: statusColors[status],\n        shape: \"circle\"\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChartUser;\nexport default StatusChartUser;\nvar _c;\n$RefreshReg$(_c, \"StatusChartUser\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","ResponsiveContainer","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChartUser","presencesData","width","height","children","dataKey","domain","name","tickFormatter","unixTime","format","type","fileName","_jsxFileName","lineNumber","columnNumber","cursor","strokeDasharray","Object","keys","map","status","data","filter","entry","slice","fill","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChartUser.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChartUser = ({presencesData}) => {\r\n  return (\r\n    <ResponsiveContainer width = '95%' height = {500} >\r\n    <ScatterChart>\r\n      <XAxis\r\n        dataKey = 'timestamp'\r\n        domain = {['auto', 'auto']}\r\n        name = 'Time'\r\n        tickFormatter = {(unixTime) => moment(unixTime).format('HH:mm Do')}\r\n        type = 'category'\r\n      />\r\n      <YAxis dataKey = 'username' name = 'Value' />\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={presencesData.filter((entry) => entry.status === status).slice(0, 100)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n\r\n    </ScatterChart>\r\n  </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatusChartUser;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC3G,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAE,MAAM;EACfC,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAACC;AAAa,CAAC,KAAK;EAC3C,oBACEP,OAAA,CAACH,mBAAmB;IAACW,KAAK,EAAG,KAAK;IAACC,MAAM,EAAI,GAAI;IAAAC,QAAA,eACjDV,OAAA,CAACV,YAAY;MAAAoB,QAAA,gBACXV,OAAA,CAACR,KAAK;QACJmB,OAAO,EAAG,WAAW;QACrBC,MAAM,EAAI,CAAC,MAAM,EAAE,MAAM,CAAE;QAC3BC,IAAI,EAAG,MAAM;QACbC,aAAa,EAAKC,QAAQ,IAAKjB,MAAM,CAACiB,QAAQ,CAAC,CAACC,MAAM,CAAC,UAAU,CAAE;QACnEC,IAAI,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFrB,OAAA,CAACP,KAAK;QAACkB,OAAO,EAAG,UAAU;QAACE,IAAI,EAAG;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CrB,OAAA,CAACN,KAAK;QAACuB,IAAI,EAAC,UAAU;QAACN,OAAO,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CrB,OAAA,CAACL,OAAO;QAAC2B,MAAM,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE9CG,MAAM,CAACC,IAAI,CAACxB,YAAY,CAAC,CAACyB,GAAG,CAAEC,MAAM,iBACpC3B,OAAA,CAACT,OAAO;QAENqC,IAAI,EAAErB,aAAa,CAACsB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACH,MAAM,KAAKA,MAAM,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE;QAC7EC,IAAI,EAAE/B,YAAY,CAAC0B,MAAM,CAAE;QAC3BM,KAAK,EAAC;MAAQ,GAHTN,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAExB,CAAC;AAACa,EAAA,GA3BI5B,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}