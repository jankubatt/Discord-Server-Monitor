{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { Scatter, ScatterChart, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// Assuming you have the presences data available in your React component state as presencesData\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChart = ({\n  data\n}) => {\n  // Assuming presencesData is in the format [{ timestamp, username, status }, ...]\n\n  const presencesDataSorted = data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(ScatterChart, {\n    width: 800,\n    height: 500,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"timestamp\",\n      type: \"category\",\n      angle: -45,\n      textAnchor: \"end\",\n      height: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"username\",\n      type: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n      dataKey: \"status\",\n      range: [120, 500]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      cursor: {\n        strokeDasharray: '3 3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n      data: presencesDataSorted.filter(data => data.status === status),\n      fill: statusColors[status],\n      line: true,\n      shape: \"circle\"\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","Scatter","ScatterChart","XAxis","YAxis","ZAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChart","data","presencesDataSorted","sort","a","b","Date","timestamp","width","height","margin","top","right","left","bottom","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","angle","textAnchor","range","cursor","Object","keys","map","status","filter","fill","line","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Scatter, ScatterChart, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\n// Assuming you have the presences data available in your React component state as presencesData\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red'\r\n};\r\n\r\nconst StatusChart = ({data}) => {\r\n  // Assuming presencesData is in the format [{ timestamp, username, status }, ...]\r\n\r\n  const presencesDataSorted = data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n  return (\r\n    <ScatterChart\r\n      width={800}\r\n      height={500}\r\n      margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"timestamp\" type=\"category\" angle={-45} textAnchor=\"end\" height={60} />\r\n      <YAxis dataKey=\"username\" type=\"category\" />\r\n      <ZAxis dataKey=\"status\" range={[120, 500]} />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n      <Legend />\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={presencesDataSorted.filter((data) => data.status === status)}\r\n          fill={statusColors[status]}\r\n          line\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n    </ScatterChart>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAErG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAE,MAAM;EACfC,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAC9B;;EAEA,MAAMC,mBAAmB,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;EAE9F,oBACEb,OAAA,CAACR,YAAY;IACXsB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZC,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAErDrB,OAAA,CAACJ,aAAa;MAAC0B,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC1B,OAAA,CAACP,KAAK;MAACkC,OAAO,EAAC,WAAW;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAE,CAAC,EAAG;MAACC,UAAU,EAAC,KAAK;MAACf,MAAM,EAAE;IAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtF1B,OAAA,CAACN,KAAK;MAACiC,OAAO,EAAC,UAAU;MAACC,IAAI,EAAC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5C1B,OAAA,CAACL,KAAK;MAACgC,OAAO,EAAC,QAAQ;MAACI,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7C1B,OAAA,CAACH,OAAO;MAACmC,MAAM,EAAE;QAAEV,eAAe,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C1B,OAAA,CAACF,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTO,MAAM,CAACC,IAAI,CAACjC,YAAY,CAAC,CAACkC,GAAG,CAAEC,MAAM,iBACpCpC,OAAA,CAACT,OAAO;MAENgB,IAAI,EAAEC,mBAAmB,CAAC6B,MAAM,CAAE9B,IAAI,IAAKA,IAAI,CAAC6B,MAAM,KAAKA,MAAM,CAAE;MACnEE,IAAI,EAAErC,YAAY,CAACmC,MAAM,CAAE;MAC3BG,IAAI;MACJC,KAAK,EAAC;IAAQ,GAJTJ,MAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACe,EAAA,GA5BInC,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}