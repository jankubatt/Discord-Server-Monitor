{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChartUser.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChartUser = ({\n  presencesData\n}) => {\n  return /*#__PURE__*/_jsxDEV(ScatterChart, {\n    width: 800,\n    height: 200 // Adjust the height to accommodate more items on the Y-axis\n    ,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 10,\n      bottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"timestamp\",\n      tickFormatter: unixTime => moment(unixTime).format('MM. DD. HH:mm'),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"username\",\n      type: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n      type: \"category\",\n      dataKey: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      cursor: {\n        strokeDasharray: '3 3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n      data: presencesData.filter(entry => entry.status === status).slice(0, 100),\n      fill: statusColors[status],\n      shape: \"circle\"\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChartUser;\nexport default StatusChartUser;\nvar _c;\n$RefreshReg$(_c, \"StatusChartUser\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChartUser","presencesData","width","height","margin","top","right","left","bottom","children","dataKey","tickFormatter","unixTime","format","type","fileName","_jsxFileName","lineNumber","columnNumber","cursor","strokeDasharray","Object","keys","map","status","data","filter","entry","slice","fill","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChartUser.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChartUser = ({presencesData}) => {\r\n\r\n\r\n  return (\r\n    <ScatterChart\r\n      width={800}\r\n      height={200} // Adjust the height to accommodate more items on the Y-axis\r\n      margin={{ top: 20, right: 30, left: 10, bottom: 10 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"timestamp\"\r\n        tickFormatter={(unixTime) => moment(unixTime).format('MM. DD. HH:mm')}\r\n        type=\"number\"\r\n      />\r\n      <YAxis dataKey=\"username\" type=\"category\" />\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={presencesData.filter((entry) => entry.status === status).slice(0, 100)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n    </ScatterChart>\r\n  );\r\n};\r\n\r\nexport default StatusChartUser;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtF,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAE,MAAM;EACfC,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAACC;AAAa,CAAC,KAAK;EAG3C,oBACEP,OAAA,CAACT,YAAY;IACXiB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI,CAAC;IAAA;IACbC,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAErDf,OAAA,CAACP,KAAK;MACJuB,OAAO,EAAC,WAAW;MACnBC,aAAa,EAAGC,QAAQ,IAAKpB,MAAM,CAACoB,QAAQ,CAAC,CAACC,MAAM,CAAC,eAAe,CAAE;MACtEC,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACFxB,OAAA,CAACN,KAAK;MAACsB,OAAO,EAAC,UAAU;MAACI,IAAI,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CxB,OAAA,CAACL,KAAK;MAACyB,IAAI,EAAC,UAAU;MAACJ,OAAO,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CxB,OAAA,CAACJ,OAAO;MAAC6B,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAM;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE9CG,MAAM,CAACC,IAAI,CAAC3B,YAAY,CAAC,CAAC4B,GAAG,CAAEC,MAAM,iBACpC9B,OAAA,CAACR,OAAO;MAENuC,IAAI,EAAExB,aAAa,CAACyB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACH,MAAM,KAAKA,MAAM,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE;MAC7EC,IAAI,EAAElC,YAAY,CAAC6B,MAAM,CAAE;MAC3BM,KAAK,EAAC;IAAQ,GAHTN,MAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACa,EAAA,GA5BI/B,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}