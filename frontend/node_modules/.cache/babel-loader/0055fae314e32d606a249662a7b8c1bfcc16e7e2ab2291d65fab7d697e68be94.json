{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChart = ({}) => {\n  const chartData = [{\n    username: \"a\",\n    timestamp: 1,\n    status: \"online\"\n  }, {\n    username: \"b\",\n    timestamp: 1,\n    status: \"online\"\n  }, {\n    username: \"a\",\n    timestamp: 2,\n    status: \"online\"\n  }, {\n    username: \"b\",\n    timestamp: 2,\n    status: \"online\"\n  }, {\n    username: \"a\",\n    timestamp: 3,\n    status: \"online\"\n  }, {\n    username: \"b\",\n    timestamp: 3,\n    status: \"online\"\n  }];\n  const uniqueUsernames = Array.from(new Set(chartData.map(entry => entry.username)));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"95%\",\n    height: 100,\n    children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\",\n        domain: ['auto', 'auto'],\n        name: \"Time\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"username\",\n        type: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), uniqueUsernames.map(username => {\n        var _chartData$find;\n        return /*#__PURE__*/_jsxDEV(Scatter, {\n          data: chartData.filter(entry => entry.username === username),\n          fill: statusColors[(_chartData$find = chartData.find(entry => entry.username === username)) === null || _chartData$find === void 0 ? void 0 : _chartData$find.status],\n          shape: \"circle\"\n        }, username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","Tooltip","ResponsiveContainer","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChart","chartData","username","timestamp","status","uniqueUsernames","Array","from","Set","map","entry","width","height","children","dataKey","domain","name","type","fileName","_jsxFileName","lineNumber","columnNumber","cursor","strokeDasharray","_chartData$find","data","filter","fill","find","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChart = ({}) => {\r\n  const chartData = [\r\n    { username: \"a\", timestamp: 1, status: \"online\" },\r\n    { username: \"b\", timestamp: 1, status: \"online\" },\r\n    { username: \"a\", timestamp: 2, status: \"online\" },\r\n    { username: \"b\", timestamp: 2, status: \"online\" },\r\n    { username: \"a\", timestamp: 3, status: \"online\" },\r\n    { username: \"b\", timestamp: 3, status: \"online\" },\r\n  ];\r\n\r\n  const uniqueUsernames = Array.from(new Set(chartData.map(entry => entry.username)));\r\n\r\n  return (\r\n    <ResponsiveContainer width='95%' height={100}>\r\n      <ScatterChart>\r\n        <XAxis\r\n          dataKey='timestamp'\r\n          domain={['auto', 'auto']}\r\n          name='Time'\r\n          type='number'\r\n        />\r\n        <YAxis dataKey='username' type='category' />\r\n        <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n        {uniqueUsernames.map(username => (\r\n          <Scatter\r\n            key={username}\r\n            data={chartData.filter(entry => entry.username === username)}\r\n            fill={statusColors[chartData.find(entry => entry.username === username)?.status]}\r\n            shape=\"circle\"\r\n          />\r\n        ))}\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}