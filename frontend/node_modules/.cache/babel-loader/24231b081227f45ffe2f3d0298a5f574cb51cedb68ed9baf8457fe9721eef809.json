{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChart = ({}) => {\n  const chartData = [{\n    username: \"m\",\n    timestamp: 1,\n    status: \"online\"\n  }, {\n    username: \"m\",\n    timestamp: 2,\n    status: \"online\"\n  }, {\n    username: \"m\",\n    timestamp: 3,\n    status: \"online\"\n  }, {\n    username: \"m\",\n    timestamp: 4,\n    status: \"online\"\n  }, {\n    username: \"m\",\n    timestamp: 5,\n    status: \"online\"\n  }, {\n    username: \"m\",\n    timestamp: 6,\n    status: \"online\"\n  }];\n  console.log(chartData);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"95%\",\n    height: 100,\n    children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\",\n        domain: ['auto', 'auto'],\n        name: \"Time\",\n        tickFormatter: unixTime => moment(unixTime).format('HH:mm Do'),\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"username\",\n        type: \"category\",\n        domain: chartData.map(entry => entry.username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n        type: \"category\",\n        dataKey: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n        data: chartData.filter(entry => entry.status === status).slice(0, 1000),\n        fill: statusColors[status],\n        shape: \"circle\"\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","ResponsiveContainer","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChart","chartData","username","timestamp","status","console","log","width","height","children","dataKey","domain","name","tickFormatter","unixTime","format","type","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","cursor","strokeDasharray","Object","keys","data","filter","slice","fill","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChart = ({}) => {\r\n  const chartData = [\r\n    { username: \"m\", timestamp: 1, status: \"online\" },\r\n    { username: \"m\", timestamp: 2, status: \"online\" },\r\n    { username: \"m\", timestamp: 3, status: \"online\" },\r\n\r\n    { username: \"m\", timestamp: 4, status: \"online\" },\r\n    { username: \"m\", timestamp: 5, status: \"online\" },\r\n    { username: \"m\", timestamp: 6, status: \"online\" },\r\n  ]\r\n  console.log(chartData)\r\n  return (\r\n    <ResponsiveContainer width = '95%' height = {100} >\r\n    <ScatterChart>\r\n      <XAxis\r\n        dataKey = 'timestamp'\r\n        domain = {['auto', 'auto']}\r\n        name = 'Time'\r\n        tickFormatter = {(unixTime) => moment(unixTime).format('HH:mm Do')}\r\n        type = 'number'\r\n      />\r\n      <YAxis dataKey = 'username' type='category'  domain={chartData.map((entry) => entry.username)}/>\r\n      <ZAxis type=\"category\" dataKey=\"status\" />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={chartData.filter((entry) => entry.status === status).slice(0, 1000)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n\r\n    </ScatterChart>\r\n  </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}