{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColor = status => {\n  const statusColors = {\n    online: 'green',\n    offline: 'grey',\n    idle: 'orange',\n    dnd: 'red'\n  };\n  return statusColors[status] || 'black';\n};\nconst StatusChart = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Load and transform your data here\n    // ...\n\n    // Example transformed data\n    const transformedData = {\n      labels: ['user1', 'user2', 'user3'],\n      // Replace with your usernames\n      datasets: [{\n        label: 'user1',\n        data: [{\n          x: '2023-01-01T12:00:00',\n          y: 'user1'\n        }],\n        borderColor: 'green',\n        // Replace with your dynamic getColor function\n        backgroundColor: 'green',\n        // Replace with your dynamic getColor function\n        pointStyle: 'circle',\n        pointRadius: 8,\n        pointHoverRadius: 10\n      }\n      // Add more datasets as needed\n      ]\n    };\n\n    setData(transformedData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(Scatter, {\n      data: data,\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            },\n            title: {\n              display: true,\n              text: 'Timestamp'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Username'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            position: 'top',\n            labels: {\n              usePointStyle: true\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(StatusChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","useEffect","useState","Scatter","jsxDEV","_jsxDEV","getColor","status","statusColors","online","offline","idle","dnd","StatusChart","_s","data","setData","transformedData","labels","datasets","label","x","y","borderColor","backgroundColor","pointStyle","pointRadius","pointHoverRadius","children","options","scales","type","time","unit","title","display","text","plugins","legend","position","usePointStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nconst getColor = (status) => {\r\n    const statusColors = {\r\n      online: 'green',\r\n      offline: 'grey',\r\n      idle: 'orange',\r\n      dnd: 'red',\r\n    };\r\n  \r\n    return statusColors[status] || 'black';\r\n  };\r\n  \r\n  const StatusChart = () => {\r\n    const [data, setData] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      // Load and transform your data here\r\n      // ...\r\n  \r\n      // Example transformed data\r\n      const transformedData = {\r\n        labels: ['user1', 'user2', 'user3'], // Replace with your usernames\r\n        datasets: [\r\n          {\r\n            label: 'user1',\r\n            data: [{ x: '2023-01-01T12:00:00', y: 'user1' }],\r\n            borderColor: 'green', // Replace with your dynamic getColor function\r\n            backgroundColor: 'green', // Replace with your dynamic getColor function\r\n            pointStyle: 'circle',\r\n            pointRadius: 8,\r\n            pointHoverRadius: 10,\r\n          },\r\n          // Add more datasets as needed\r\n        ],\r\n      };\r\n  \r\n      setData(transformedData);\r\n    }, []);\r\n  \r\n    return (\r\n      <div>\r\n        {data && (\r\n          <Scatter\r\n            data={data}\r\n            options={{\r\n              scales: {\r\n                x: {\r\n                  type: 'time',\r\n                  time: {\r\n                    unit: 'day',\r\n                  },\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Timestamp',\r\n                  },\r\n                },\r\n                y: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Username',\r\n                  },\r\n                },\r\n              },\r\n              plugins: {\r\n                legend: {\r\n                  position: 'top',\r\n                  labels: {\r\n                    usePointStyle: true,\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default StatusChart;\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EACzB,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE;EACP,CAAC;EAED,OAAOJ,YAAY,CAACD,MAAM,CAAC,IAAI,OAAO;AACxC,CAAC;AAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACA,MAAMgB,eAAe,GAAG;MACtBC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAAE;MACrCC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,OAAO;QACdL,IAAI,EAAE,CAAC;UAAEM,CAAC,EAAE,qBAAqB;UAAEC,CAAC,EAAE;QAAQ,CAAC,CAAC;QAChDC,WAAW,EAAE,OAAO;QAAE;QACtBC,eAAe,EAAE,OAAO;QAAE;QAC1BC,UAAU,EAAE,QAAQ;QACpBC,WAAW,EAAE,CAAC;QACdC,gBAAgB,EAAE;MACpB;MACA;MAAA;IAEJ,CAAC;;IAEDX,OAAO,CAACC,eAAe,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAuB,QAAA,EACGb,IAAI,iBACHV,OAAA,CAACF,OAAO;MACNY,IAAI,EAAEA,IAAK;MACXc,OAAO,EAAE;QACPC,MAAM,EAAE;UACNT,CAAC,EAAE;YACDU,IAAI,EAAE,MAAM;YACZC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR,CAAC;YACDC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF,CAAC;UACDd,CAAC,EAAE;YACDY,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE,KAAK;YACfrB,MAAM,EAAE;cACNsB,aAAa,EAAE;YACjB;UACF;QACF;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhEID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAkEjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}