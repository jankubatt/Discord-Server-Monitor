{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport 'chartjs-plugin-colorschemes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusChart = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    const presencesData = processData(data);\n\n    // Create the chart data object\n    const chartData = createChartData(presencesData);\n  }, []);\n  const processData = csvData => {\n    // Process CSV data and convert it to a suitable format\n    // You may use a CSV parsing library for more complex data processing\n    return csvData.split('\\n').map(row => row.split(','));\n  };\n  const createChartData = presencesData => {\n    // Process presencesData and convert it to a Chart.js compatible format\n    // You may need to handle timestamp conversion and sorting here\n    // Refer to Chart.js documentation for customization options\n\n    // Example chart data (replace with actual data transformation)\n    const chartData = {\n      datasets: [{\n        label: 'Online',\n        data: [{\n          x: 1,\n          y: 2\n        }],\n        backgroundColor: 'green'\n      }\n      // Add more datasets for other statuses\n      ]\n    };\n\n    return chartData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Scatter, {\n      data: chartData,\n      options: {\n        plugins: {\n          colorschemes: {\n            scheme: 'tableau.Tableau10' // Choose a color scheme\n          }\n        },\n\n        title: {\n          display: true,\n          text: 'Usernames and Their Status Over Time'\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            // or 'time' if timestamps are used\n            position: 'bottom',\n            title: {\n              display: true,\n              text: 'Timestamp'\n            }\n          },\n          y: {\n            type: 'category',\n            title: {\n              display: true,\n              text: 'Username'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","useEffect","useState","Scatter","jsxDEV","_jsxDEV","StatusChart","data","_s","presencesData","processData","chartData","createChartData","csvData","split","map","row","datasets","label","x","y","backgroundColor","children","options","plugins","colorschemes","scheme","title","display","text","scales","type","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-colorschemes';\r\n\r\nconst StatusChart = ({data}) => {\r\n\r\n  useEffect(() => {\r\n      const presencesData = processData(data);\r\n\r\n      // Create the chart data object\r\n      const chartData = createChartData(presencesData);\r\n\r\n\r\n  }, []);\r\n\r\n  const processData = (csvData) => {\r\n    // Process CSV data and convert it to a suitable format\r\n    // You may use a CSV parsing library for more complex data processing\r\n    return csvData.split('\\n').map((row) => row.split(','));\r\n  };\r\n\r\n  const createChartData = (presencesData) => {\r\n    // Process presencesData and convert it to a Chart.js compatible format\r\n    // You may need to handle timestamp conversion and sorting here\r\n    // Refer to Chart.js documentation for customization options\r\n\r\n    // Example chart data (replace with actual data transformation)\r\n    const chartData = {\r\n      datasets: [\r\n        {\r\n          label: 'Online',\r\n          data: [{ x: 1, y: 2 }],\r\n          backgroundColor: 'green',\r\n        },\r\n        // Add more datasets for other statuses\r\n      ],\r\n    };\r\n\r\n    return chartData;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Scatter\r\n        data={chartData}\r\n        options={{\r\n          plugins: {\r\n            colorschemes: {\r\n              scheme: 'tableau.Tableau10', // Choose a color scheme\r\n            },\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Usernames and Their Status Over Time',\r\n          },\r\n          scales: {\r\n            x: {\r\n              type: 'linear', // or 'time' if timestamps are used\r\n              position: 'bottom',\r\n              title: {\r\n                display: true,\r\n                text: 'Timestamp',\r\n              },\r\n            },\r\n            y: {\r\n              type: 'category',\r\n              title: {\r\n                display: true,\r\n                text: 'Username',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAE9BP,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAGC,WAAW,CAACH,IAAI,CAAC;;IAEvC;IACA,MAAMI,SAAS,GAAGC,eAAe,CAACH,aAAa,CAAC;EAGpD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIG,OAAO,IAAK;IAC/B;IACA;IACA,OAAOA,OAAO,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC;EACzD,CAAC;EAED,MAAMF,eAAe,GAAIH,aAAa,IAAK;IACzC;IACA;IACA;;IAEA;IACA,MAAME,SAAS,GAAG;MAChBM,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,QAAQ;QACfX,IAAI,EAAE,CAAC;UAAEY,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;QACtBC,eAAe,EAAE;MACnB;MACA;MAAA;IAEJ,CAAC;;IAED,OAAOV,SAAS;EAClB,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,eACEjB,OAAA,CAACF,OAAO;MACNI,IAAI,EAAEI,SAAU;MAChBY,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,YAAY,EAAE;YACZC,MAAM,EAAE,mBAAmB,CAAE;UAC/B;QACF,CAAC;;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR,CAAC;QACDC,MAAM,EAAE;UACNX,CAAC,EAAE;YACDY,IAAI,EAAE,QAAQ;YAAE;YAChBC,QAAQ,EAAE,QAAQ;YAClBL,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF,CAAC;UACDT,CAAC,EAAE;YACDW,IAAI,EAAE,UAAU;YAChBJ,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF;QACF;MACF;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxEIF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA0EjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}