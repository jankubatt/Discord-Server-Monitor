{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morpheus\\\\Projects\\\\discord-activity\\\\frontend\\\\src\\\\components\\\\StatusChart.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\nimport moment from 'moment'; // Import moment for formatting timestamps\n\n// Assuming presencesData is the data received from the API or some other source\n// Make sure to convert timestamp to a JavaScript Date object\n\n// Define a color palette for the statuses\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  online: 'green',\n  offline: 'grey',\n  idle: 'orange',\n  dnd: 'red'\n};\nconst StatusChart = () => {\n  const presencesData = [{\n    username: \"Honza\",\n    timestamp: \"1\",\n    status: \"online\"\n  }, {\n    username: \"Honza\",\n    timestamp: \"2\",\n    status: \"online\"\n  }, {\n    username: \"Honza\",\n    timestamp: \"3\",\n    status: \"dnd\"\n  }, {\n    username: \"Honza\",\n    timestamp: \"4\",\n    status: \"online\"\n  }];\n  return /*#__PURE__*/_jsxDEV(ScatterChart, {\n    width: 800,\n    height: 400,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"timestamp\",\n      type: \"category\",\n      angle: -45,\n      textAnchor: \"end\",\n      height: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"username\",\n      type: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZAxis, {\n      type: \"category\",\n      dataKey: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      cursor: {\n        strokeDasharray: '3 3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Object.keys(statusColors).map(status => /*#__PURE__*/_jsxDEV(Scatter, {\n      data: presencesData.filter(entry => entry.status === status).slice(0, 1000),\n      fill: statusColors[status],\n      shape: \"circle\"\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusChart;\nexport default StatusChart;\nvar _c;\n$RefreshReg$(_c, \"StatusChart\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","ZAxis","Tooltip","Legend","moment","jsxDEV","_jsxDEV","statusColors","online","offline","idle","dnd","StatusChart","presencesData","username","timestamp","status","width","height","margin","top","right","left","bottom","children","dataKey","type","angle","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","cursor","strokeDasharray","Object","keys","map","data","filter","entry","slice","fill","shape","_c","$RefreshReg$"],"sources":["C:/Users/morpheus/Projects/discord-activity/frontend/src/components/StatusChart.js"],"sourcesContent":["import React from 'react';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip, Legend } from 'recharts';\r\nimport moment from 'moment';  // Import moment for formatting timestamps\r\n\r\n// Assuming presencesData is the data received from the API or some other source\r\n// Make sure to convert timestamp to a JavaScript Date object\r\n\r\n// Define a color palette for the statuses\r\nconst statusColors = {\r\n  online: 'green',\r\n  offline: 'grey',\r\n  idle: 'orange',\r\n  dnd: 'red',\r\n};\r\n\r\nconst StatusChart = () => {\r\n    \r\n    const presencesData = [\r\n        {username: \"Honza\", timestamp: \"1\", status: \"online\"},\r\n        {username: \"Honza\", timestamp: \"2\", status: \"online\"},\r\n        {username: \"Honza\", timestamp: \"3\", status: \"dnd\"},\r\n        {username: \"Honza\", timestamp: \"4\", status: \"online\"},\r\n    ]\r\n\r\n  return (\r\n    <ScatterChart\r\n      width={800}\r\n      height={400}\r\n      margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\r\n    >\r\n      <XAxis\r\n        dataKey=\"timestamp\"\r\n        type=\"category\"\r\n        angle={-45}\r\n        textAnchor=\"end\"\r\n        height={60}\r\n      />\r\n      <YAxis dataKey=\"username\" type=\"category\" />\r\n      <ZAxis type=\"category\" dataKey=\"status\"  />\r\n      <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n\r\n      {Object.keys(statusColors).map((status) => (\r\n        <Scatter\r\n          key={status}\r\n          data={presencesData.filter((entry) => entry.status === status).slice(0, 1000)}\r\n          fill={statusColors[status]}\r\n          shape=\"circle\"\r\n        />\r\n      ))}\r\n    </ScatterChart>\r\n  );\r\n};\r\n\r\nexport default StatusChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtF,OAAOC,MAAM,MAAM,QAAQ,CAAC,CAAE;;AAE9B;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAE,MAAM;EACfC,IAAI,EAAE,QAAQ;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAEtB,MAAMC,aAAa,GAAG,CAClB;IAACC,QAAQ,EAAE,OAAO;IAAEC,SAAS,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC,EACrD;IAACF,QAAQ,EAAE,OAAO;IAAEC,SAAS,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC,EACrD;IAACF,QAAQ,EAAE,OAAO;IAAEC,SAAS,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAK,CAAC,EAClD;IAACF,QAAQ,EAAE,OAAO;IAAEC,SAAS,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC,CACxD;EAEH,oBACEV,OAAA,CAACT,YAAY;IACXoB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZC,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAErDlB,OAAA,CAACP,KAAK;MACJ0B,OAAO,EAAC,WAAW;MACnBC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAE,CAAC,EAAG;MACXC,UAAU,EAAC,KAAK;MAChBV,MAAM,EAAE;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACF1B,OAAA,CAACN,KAAK;MAACyB,OAAO,EAAC,UAAU;MAACC,IAAI,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5C1B,OAAA,CAACL,KAAK;MAACyB,IAAI,EAAC,UAAU;MAACD,OAAO,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3C1B,OAAA,CAACJ,OAAO;MAAC+B,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAM;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE9CG,MAAM,CAACC,IAAI,CAAC7B,YAAY,CAAC,CAAC8B,GAAG,CAAErB,MAAM,iBACpCV,OAAA,CAACR,OAAO;MAENwC,IAAI,EAAEzB,aAAa,CAAC0B,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACxB,MAAM,KAAKA,MAAM,CAAC,CAACyB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAE;MAC9EC,IAAI,EAAEnC,YAAY,CAACS,MAAM,CAAE;MAC3B2B,KAAK,EAAC;IAAQ,GAHT3B,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACY,EAAA,GApCIhC,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}